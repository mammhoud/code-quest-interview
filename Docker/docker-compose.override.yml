version: "3.9"
networks:

  webserver:
    driver: bridge
    name: webserver
    external: false

services:

  # queue:
  #   image: rabbitmq:3
  #   container_name: queue
  #   hostname: queue
  #   # volumes:
  #   #   - docker/conf/queue/data/:/var/lib/rabbitmq/
  #   #   - docker/conf/queue/log/:/var/log/rabbitmq
  #   #   - docker/conf/queue/conf:/etc/rabbitmq/rabbitmq.conf

  broker:
    image: rabbitmq:3-management-alpine
    container_name: broker
    hostname: broker
    # volumes:
    #   - docker/conf/broker/data/:/var/lib/rabbitmq/
    #   - docker/conf/broker/log/:/var/log/rabbitmq
    #   - docker/conf/broker.conf:/etc/rabbitmq/rabbitmq.conf
    # environment:
    #   - RABBITMQ_DEFAULT_USER=admin
    #   - RABBITMQ_DEFAULT_PASS=admin
    #   - RABBITMQ_DEFAULT_VHOST=/

    networks:
      - webserver
    ports:
      - 5672:5672
    restart: unless-stopped

  # flower:
  #   image: mher/flower
  #   networks:
  #     - monitornetwork
  #   # env_file:
  #   #   - .env
  #   depends_on:
  #     - broker
  #     # - queue
  #   command:
  #     # - "--broker=amqp://guest@queue:5672//"
  #     # For the "Broker" tab to work in the flower UI, uncomment the following command argument,
  #     # and change the queue service's image as well
  #     - "--broker_api=http://guest:guest@queue:15672/api//"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefikdocker.network=monitornetwork"
  #     - "traefik.http.routers.flower.rule=Host(`flower.localhost`)"
  #     - "traefik.http.routers.flower.entrypoints=web"
  #     - traefik.http.services.flower.loadbalancer.server.port=5555

  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo
    ports:
      - 27017:27017
    networks:
      - webserver


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./docker/conf/${ENVIRONMENT}/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - webserver
    restart: unless-stopped
      ###############################################
      ###############################################
  cworker:
    container_name: cworker
    hostname: cworker
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app/
    entrypoint: ["/app/docker/scripts/worker-start.sh"]
    depends_on:
      - broker
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "3"
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-docker}
    env_file:
      - docker/.env
    networks:
      - webserver
    restart: on-failure

  cbeats:
    container_name: cbeats
    hostname: cbeats
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app/

    entrypoint: ["/app/docker/scripts/beat-start.sh"]

    restart: on-failure
    depends_on:
      - cworker
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "3"
    env_file:
      - docker/.env
    networks:
      - webserver
